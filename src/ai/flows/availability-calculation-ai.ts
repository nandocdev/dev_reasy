// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A flow that uses AI to calculate booking availability considering staff schedules, resource availability, and service durations.
 *
 * - calculateAvailabilityWithAI - A function that calculates booking availability using AI.
 * - CalculateAvailabilityInput - The input type for the calculateAvailabilityWithAI function.
 * - CalculateAvailabilityOutput - The return type for the calculateAvailabilityWithAI function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CalculateAvailabilityInputSchema = z.object({
  serviceName: z.string().describe('The name of the service.'),
  staffSchedules: z.string().describe('The schedules of the staff members.'),
  resourceAvailability: z.string().describe('The availability of the resources.'),
  serviceDuration: z.number().describe('The duration of the service in minutes.'),
  customerPreferences: z.string().describe('The preferences of the customer.'),
  startTime: z.string().describe('The desired start time for the service (ISO format).'),
  endTime: z.string().describe('The desired end time for the service (ISO format).'),
});
export type CalculateAvailabilityInput = z.infer<typeof CalculateAvailabilityInputSchema>;

const CalculateAvailabilityOutputSchema = z.object({
  availableSlots: z.array(
    z.object({
      startTime: z.string().describe('The start time of the available slot (ISO format).'),
      endTime: z.string().describe('The end time of the available slot (ISO format).'),
    })
  ).describe('A list of available booking slots.'),
  summary: z.string().describe('A summary of how the availability was calculated.'),
});
export type CalculateAvailabilityOutput = z.infer<typeof CalculateAvailabilityOutputSchema>;

export async function calculateAvailabilityWithAI(input: CalculateAvailabilityInput): Promise<CalculateAvailabilityOutput> {
  return calculateAvailabilityWithAIFlow(input);
}

const prompt = ai.definePrompt({
  name: 'calculateAvailabilityPrompt',
  input: {
    schema: CalculateAvailabilityInputSchema,
  },
  output: {
    schema: CalculateAvailabilityOutputSchema,
  },
  prompt: `You are a booking assistant AI that helps calculate available booking slots based on the given information.

  Consider the following factors when determining availability:

  - Service Name: {{{serviceName}}}
  - Staff Schedules: {{{staffSchedules}}}
  - Resource Availability: {{{resourceAvailability}}}
  - Service Duration: {{{serviceDuration}}} minutes
  - Customer Preferences: {{{customerPreferences}}}
  - Start Time: {{{startTime}}}
  - End Time: {{{endTime}}}

  Based on these factors, determine the available booking slots and provide a summary of how you calculated the availability.
  Make sure to return the available slots in ISO format.
  Return only valid and complete JSON.
  `,
});

const calculateAvailabilityWithAIFlow = ai.defineFlow(
  {
    name: 'calculateAvailabilityWithAIFlow',
    inputSchema: CalculateAvailabilityInputSchema,
    outputSchema: CalculateAvailabilityOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
